#!/usr/bin/env python3

import pyglet
from pyglet.window import mouse

from psaux.utils import Vector2d
from psaux.world import World
from psaux.config import WIDTH, HEIGHT, DELTA_TIME, MAX_PARTICLES, MAX_ADD_PARTICLES


class ParticleWindow(pyglet.window.Window):
    def __init__(self, *args, **kwargs):
        super().__init__(width=WIDTH, height=HEIGHT, resizable=True, *args, **kwargs)
        pyglet.gl.glClearColor(0.15, 0.1, 0.2, 1.0)
        pyglet.clock.schedule_interval(self.update, DELTA_TIME)
        self.world = World()
        self.click_coord = None
        self.drag = False

    def on_draw(self):
        self.clear()
        self.world.particle_batch.draw()
        self.world.sun.draw()

    def update(self, delta_time: float):
        self.world.apply_forces(delta_time)
        # cap the max nbr that can be spawned
        for i in range(
            min(MAX_ADD_PARTICLES, MAX_PARTICLES - len(self.world.particles))
        ):
            self.world.spawn_particle()

    def on_mouse_press(self, x: float, y: float, button: int, modifiers: int):
        self.click_coord = (x, y)
        if modifiers == 1:
            self.world.place_sun(x, y)

    def on_mouse_drag(self, x: float, y: float, dx: float, dy: float, buttons: int, modifiers: int):
        self.drag = True

    def on_mouse_release(self, x: float, y: float, button: int, modifiers: int):
        if self.drag and modifiers == 0:
            start_x, start_y = self.click_coord
            movement_vector = Vector2d.from_difference(self.click_coord, (x, y))
            final_x, final_y = movement_vector.as_tuple()
            self.world.spawn_particle(start_x, start_y, final_x, final_y)

        self.click_coord = None
        self.drag = False


if __name__ == "__main__":
    window = ParticleWindow(caption="psaux")
    window.set_minimum_size(640, 480)
    pyglet.app.run()
